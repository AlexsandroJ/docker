# deploy.yaml

# PVCs
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongo-data
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi

# MongoDB Deployment + Service
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
        - name: mongo
          image: mongo:latest
          ports:
            - containerPort: 27017
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              value: "root"
            - name: MONGO_INITDB_ROOT_PASSWORD
              value: "example"
          volumeMounts:
            - name: mongo-data
              mountPath: /data/db
      volumes:
        - name: mongo-data
          persistentVolumeClaim:
            claimName: mongo-data

---
apiVersion: v1
kind: Service
metadata:
  name: mongo
spec:
  type: LoadBalancer
  selector:
    app: mongo
  ports:
    - protocol: TCP
      port: 27017
      targetPort: 27017

# Mongo Express
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: express
spec:
  replicas: 1
  selector:
    matchLabels:
      app: express
  template:
    metadata:
      labels:
        app: express
    spec:
      containers:
        - name: express
          image: mongo-express
          ports:
            - containerPort: 8081
          env:
            - name: ME_CONFIG_BASICAUTH_USERNAME
              value: "root"
            - name: ME_CONFIG_BASICAUTH_PASSWORD
              value: "example"
            - name: ME_CONFIG_MONGODB_SERVER
              value: "mongo"
            - name: ME_CONFIG_MONGODB_AUTH_USERNAME
              value: "root"
            - name: ME_CONFIG_MONGODB_AUTH_PASSWORD
              value: "example"

---
apiVersion: v1
kind: Service
metadata:
  name: express
spec:
  type: LoadBalancer
  selector:
    app: express
  ports:
    - protocol: TCP
      port: 8081
      targetPort: 8081

# API Node.js
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
    spec:
      containers:
        - name: api
          image: alexsandrojsilva0/api:latest # Substitua
          ports:
            - containerPort: 3001
          env:
            - name: JWT_SECRET
              value: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9JWT"
            - name: NODE_ENV
              value: "production"
            - name: PORT
              value: "3001"
            - name: CLUSTER_API_URI_SERVER
              value: "https://10.43.0.1:8001"
            - name: API_URL
              value: "http://api:3001"
            - name: MIN_SIZE_PASSWORD
              value: "6"
            - name: COLLECTION_NAME_CLIENT_ZAP
              value: "collection_zap"
            - name: COLLECTION_NAME_CLIENT_PEDIDOS
              value: "collection_pedidos"
            - name: COLLECTION_NAME_CLIENT_PAGAMENTOS
              value: "collection_pagamentos"
            - name: GOOGLE_CLIENT_ID
              value: "566156554431-2qmrdv6eagv44rq6n07c1mvupak41v6t.apps.googleusercontent.com"
            - name: GOOGLE_CLIENT_SECRET
              value: "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"
            - name: REDIRECT_URI
              value: "http://localhost:3000/testApi"
            - name: DB_USER
              value: "root"
            - name: DB_PASS
              value: "example"
            - name: DB_HOST
              value: "mongo"
            - name: DB_PORT
              value: "27017"
            - name: DB_NAME
              value: "tests"
            - name: DEV
              value: "false"

---
apiVersion: v1
kind: Service
metadata:
  name: api
spec:
  type: LoadBalancer
  selector:
    app: api
  ports:
    - protocol: TCP
      port: 3001
      targetPort: 3001
