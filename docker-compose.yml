
volumes:
  mongo-data:
  portainer_data:

networks:
  net-geral:

services:
 
  mongo:
    image: mongo:latest
    container_name: mongo
    volumes:
      - mongo-data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    ports:
      - 27017:27017
    networks:
      - net-geral
    restart: always

  mongo-express:
    image: mongo-express
    container_name: express
    environment:
      ME_CONFIG_BASICAUTH_USERNAME: root
      ME_CONFIG_BASICAUTH_PASSWORD: example
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_MONGODB_AUTH_USERNAME  : root
      ME_CONFIG_MONGODB_AUTH_PASSWORD  : example
    restart: always
    ports:
      - 8081:8081
    networks:
      - net-geral
    depends_on:
      - mongo

  api:
    container_name: api
    build:
      context: .
      dockerfile: Dockerfile-api
    ports:
      - "3001:3001"
    networks:
      - net-geral
    environment:
      - NODE_ENV=production
      - PORT=3001

      - DB_USER=root
      - DB_PASS=example
      - DB_HOST=mongo
      - DB_PORT=27017
      - DB_NAME=tests
      - DEV=false
    restart: always
    depends_on:
        - mongo

  whatsap:
    container_name: whatsap
    build:
      context: .
      dockerfile: Dockerfile-whatsap
    ports:
      - "5001:5001"
    networks:
      - net-geral
    environment:
      - NODE_ENV=production
      - API_URL=http://api:3001
      - DEV=false
    restart: always
    depends_on:
        - api

  next:
    container_name: next
    build:
      context: .
      dockerfile: Dockerfile-next
    ports:
      - 80:80
    networks:
      - net-geral
    environment:
      - NEXT_PUBLIC_API_URL=http://api:3001
    restart: always
    pull_policy: always
    depends_on:
        - api
        - whatsap

  portainer:
    image: portainer/portainer-ce
    container_name: portainer
    restart: always
    ports:
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
